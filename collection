<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Mage
 * @package     Mage_Adminhtml
 * @copyright   Copyright (c) 2011 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */


/**
 * Report NotSold Products Grid Block
 *
 * @category   Mage
 * @package    Mage_Adminhtml
 * @author     Magento Core Team <core@magentocommerce.com>
 */
 
class Mage_Adminhtml_Block_Report_Goodgifts_Soldlux_Grid extends Mage_Adminhtml_Block_Report_Grid
{
    /**
     * Sub report size
     *
     * @var int
     */
    protected $_subReportSize = 0;

    /**
     * Initialize Grid settings
     *
     */
    public function __construct()
    {
        parent::__construct();
        $this->setId('gridGoodgiftsSoldlux');
        $this->setUseAjax(true);
        $this->setDefaultSort('total_sales_value');
        $this->setDefaultDir('DESC');
        $this->setSaveParametersInSession(true);
    }

    /**
     * Prepare collection object for grid
     *
     * @return Mage_Adminhtml_Block_Report_Product_Sold_Grid
     */
    protected function _prepareCollection()
    {
        parent::_prepareCollection();
        $this->getCollection()
            ->initReport('reports/goodgifts_soldlux_collection');
        return $this;
    }

    /**
     * Prepare Grid columns
     *
     * @return Mage_Adminhtml_Block_Report_Product_Sold_Grid
     */
    protected function _prepareColumns()
    {

        $this->addColumn('product_id', array(
            'header'    =>Mage::helper('reports')->__('Product ID'),
            'index'     =>'product_id',
            'type'      =>'number'
        ));

        $this->addColumn('sku', array(
            'header'    =>Mage::helper('reports')->__('SKU'),
            'index'     =>'sku'
        ));
        
        $this->addColumn('name', array(
            'header'    =>Mage::helper('reports')->__('Product Name'),
            'index'     =>'name'
        ));

        $currencyCode = $this->getCurrentCurrencyCode();
        
        $this->addColumn('minimum_price', array(
            'header'    =>Mage::helper('reports')->__('Minimum Price'),
            'index'     =>'minimum_price',
            'currency_code' => $currencyCode,
            'total'         => 'sum',
            'type'      =>'currency'
        ));
        
        $this->addColumn('maximum_price', array(
            'header'    =>Mage::helper('reports')->__('Maximum Price'),
            'index'     =>'maximum_price',
            'currency_code' => $currencyCode,
            'total'         => 'sum',
            'type'      =>'currency'
        ));
        
        $this->addColumn('average_price', array(
            'header'    =>Mage::helper('reports')->__('Average Price'),
            'index'     =>'average_price',
            'currency_code' => $currencyCode,
            'total'         => 'sum',
            'type'      =>'currency'
        ));
        
        $this->addColumn('current_price', array(
            'header'    =>Mage::helper('reports')->__('Current Price'),
            'index'     =>'current_price',
            'currency_code' => $currencyCode,
            'total'         => 'sum',
            'type'      =>'currency'
        ));
        
        $this->addColumn('total_quantity_sold', array(
            'header'    =>Mage::helper('reports')->__('Total Quantity Sold'),
            'index'     =>'total_quantity_sold',
            'type'      =>'number',
            'total'     => 'sum'
        ));
        
        $this->addColumn('total_sales_value', array(
            'header'    =>Mage::helper('reports')->__('Total Sales Value'),
            'index'     =>'total_sales_value',
            'currency_code' => $currencyCode,
            'total'         => 'sum',
            'type'      =>'currency'
        ));

        $this->addExportType('*/*/exportSoldluxCsv', Mage::helper('reports')->__('CSV'));
        $this->addExportType('*/*/exportSoldluxExcel', Mage::helper('reports')->__('Excel XML'));

        return parent::_prepareColumns();
    }
}
