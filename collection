<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    Mage
 * @package     Mage_Reports
 * @copyright   Copyright (c) 2011 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */


/**
 * Report Sold Products collection
 *
 * @category    Mage
 * @package     Mage_Reports
 * @author      Magento Core Team <core@magentocommerce.com>
 */
 
class Mage_Reports_Model_Resource_Goodgifts_Soldlux_Collection extends Mage_Reports_Model_Resource_Product_Collection
{
    /**
     * Initialize resources
     *
     */

    protected function _construct()
    {
        parent::_construct();
        $this->_useAnalyticFunction = true;
    }
    /**
     * Set Date range to collection
     *
     * @param int $from
     * @param int $to
     * @return Mage_Reports_Model_Resource_Product_Sold_Collection
     */

    public function selectSubselect() 
    {
       return $this->getConnection()->select()
            ->from(array('var' => 'catalog_product_entity_decimal'),
                   array('var.value', 'entity_id'))
            ->join(array('eav' => 'eav_attribute'),
            "eav.attribute_code = 'price' AND eav.attribute_id = var.attribute_id");
    }

    public function addProductsSold($from = '', $to = '')
    {
        $subselect = (string)$this->selectSubselect();

        $this->getSelect()->reset()
            ->from(array('pi' => 'catalog_product_entity'),
                   array('product_id' => 'so.product_id',
                         'sku' => 'so.sku',
                         'name' => 'so.name',
                         'minimum_price' => 'MIN(so.price)',
                         'maximum_price' => 'MAX(so.price)',
                         'average_price' => 'AVG(so.price)',
                         'current_price' => 'price.value',
                         'total_quantity_sold' => 'SUM(so.qty_shipped)',
                         'total_sales_value' => 'SUM(so.qty_shipped * so.price)',
                         'so.created_at'))
            ->join(array('so' => 'sales_flat_order_item'),
                   'so.product_id = pi.entity_id',
                   array())    
            ->join(array('sf' => 'sales_flat_order'),
                   'so.order_id = sf.entity_id',
                   array())      
            ->joinLeft(array('price' => new Zend_Db_Expr('('.$subselect.')')),
                'price.entity_id = pi.entity_id')
            ->where('so.qty_shipped > 0')
            ->where("sf.status = 'pending' or sf.status = 'complete'")
            ->where($this->_prepareBetweenSql('so.created_at', $from, $to))
            ->group('so.sku')
            ->order('total_sales_value DESC');
            
        return $this;
    }

    public function setDateRange($from, $to)
    {
        $this->_reset()
            ->addAttributeToSelect('*')
            ->addProductsSold($from, $to);
        return $this;
    }

    /**
     * Set store filter to collection
     *
     * @param array $storeIds
     * @return Mage_Reports_Model_Resource_Product_Sold_Collection
     */
    public function setStoreIds($storeIds)
    {
        if ($storeIds) {
            $this->getSelect()->where('so.store_id IN (?)', (array)$storeIds);
        }
        return $this;
    }

    /**
     * Add website product limitation
     *
     * @return Mage_Reports_Model_Resource_Product_Sold_Collection
     */
    protected function _productLimitationJoinWebsite()
    {
        $filters     = $this->_productLimitationFilters;
        $conditions  = array('product_website.product_id=e.entity_id');
        if (isset($filters['website_ids'])) {
            $conditions[] = $this->getConnection()
                ->quoteInto('product_website.website_id IN(?)', $filters['website_ids']);

            $subQuery = $this->getConnection()->select()
                ->from(array('product_website' => $this->getTable('catalog/product_website')),
                    array('product_website.product_id')
                )
                ->where(join(' AND ', $conditions));
            $this->getSelect()->where('e.entity_id IN( '.$subQuery.' )');
        }

        return $this;
    }
}
